% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runfunctions.R
\name{modelin}
\alias{modelin}
\title{Create object of class microin with weather data as data.frame}
\usage{
modelin(micropoint, vegp, soilc, dtm, runchecks = TRUE, xyf = 1)
}
\arguments{
\item{micropoint}{an object of class micropoint as returned by [runpointmodel()] or [subsetpointmodel()]}

\item{vegp}{an object of class vegparams as returned by [vegpfromhab()] (see details)}

\item{soilc}{an object of class soilcharac as returned by [soilcfromtype()]}

\item{dtm}{a PackedSpatRaster or SpatRaster object of elevations (see details)}

\item{runchecks}{optional logical indicating whether to call [checkinputs()] to run
checks on format and units of input data.}

\item{xyf}{optional spatial smoothing factor applied in calculation of surface
roughness and zero-plane displacement heights (see details)}
}
\description{
The function `modelin` creates an object of class microin
which unpacks various component inputs and reformats as required
for running the model in hourly timesteps. Here it is assumed that the input
weather data are a data.frame - i.e. not spatially variable.
}
\details{
The array of Plant Area index values in `vegp` must
of the same x and y dims as `dtm` but can contain any number of repeated
measures up to the number of entries in `weather`. Data are interpolated to the
time increment of `weather`. Other vegetation paramaters, including vegetation
height are assumed time-invarient. The SpatRaster datasets in `soilc` must have
the same x and y dims as `dtm`. The x,y and z units of `dtm` must be all be in
metres and the coordinate reference system must be defined. In subsequent
downscaling of wind, the drag effects of vegetation, determined by vegetation height
and foliage area are accounted for can calculated at this stage. In so doing, it is
necessary to accommodate the possibility that the wind speed is not just affected
by the surface roughness in each pixel,  but also by vegetation surrounding the
location. This is accommodated for by applying `xyf` which effectively smooths
the surface roughness coefficients using `terra::aggregate` where `xyf` is the
aggregation factor. If `xyf` is set to `NA`, the roughness coefficients are averaged
across the study area.
}
\seealso{
[checkinputs()], [modelin_dy()], [modelina()]
}
