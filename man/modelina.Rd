% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nonhourly.R
\name{modelina}
\alias{modelina}
\title{Create object of class microin with weather data as an array}
\usage{
modelina(
  micropointa,
  vegp,
  soilc,
  dtmc,
  dtm,
  altcorrect = 0,
  runchecks = TRUE,
  xyf = 1
)
}
\arguments{
\item{micropointa}{a list of objects of class micropoint as returned by [runpointmodela()] or [subsetpointmodela()]}

\item{vegp}{an object of class vegparams as returned by [vegpfromhab()] (see details)}

\item{soilc}{an object of class soilcharac as returned by [soilcfromtype()]}

\item{dtmc}{a SpatRaster object giving the resolution, spatial extent, and projection
of the weather data used when running [micropointa()]. Must give elevations in metres if
`altcorrect` > 0.}

\item{dtm}{a SpatRaster object of elevations in metres (see details)}

\item{altcorrect}{a single numeric value indicating whether to apply an elevational lapse rate correction to temperatures (0 = no correction, 1 = fixed lapse rate correction, 2 = humidity-dependent variable lapse rate correction, see details)}

\item{runchecks}{optional logical indicating whether to call [checkinputs()] to run}

\item{xyf}{optional spatial smoothing factor applied in calculation of surface
roughness and zero-plane displacement heights (see [modelin()])}

\item{precarray}{an array of daily precipitation (see details)}
}
\description{
The function `modelina` creates an object of class microin
which unpacks various component inputs and reformats as required
for running the model in hourly timesteps. Here it is assumed that the input
weather data are as arrays - i.e. variable in space
}
\details{
The units of dtmc must match dtm and must be elevation data if an
altitude correction is applied. If `altcorrect`>0, the elevation
difference between each pixel of dtm and dtmc is calculated and
an elevation lapse rate correction is applied to the temperature and
pressure data to account for these elevation differences. If `altcorrect`= 1, a fixed
lapse rate of 5 degrees per 100m is applied to the temperature data. If
`altcorrect`= 2, humidity-dependent lapse rates are calculated and applied.
See also details for  modelin.
}
\examples{
library(terra)
# ====================== Create dummy array datasets ===================== #
ta <- function(x, xdim = 5, ydim = 5) {
  array(rep(x, each = ydim * xdim), dim = c(ydim, xdim, length(x)))
}
# ~~ Create list of climate variable arrays ~~ #
climarray <- list(temp = ta(climdata$temp),
                  relhum = ta(climdata$relhum),
                  pres = ta(climdata$pres),
                  swrad = ta(climdata$swrad),
                  difrad = ta(climdata$difrad),
                  skyem = ta(climdata$skyem),
                  windspeed = ta(climdata$windspeed),
                  winddir = ta(climdata$winddir))
# ~~ Create precipitation array ~~ #
precarray <- ta(rainfall)
# ============= Run point microclimate model for each grid cell ========== #
tme <- as.POSIXlt(climdata$obs_time, tz="UTC")
micropointa <- runpointmodela(climarray, precarray, tme, vegp, soilc)
micropointa<-subsetpointmodela(micropointa, tstep = "month", what = "tmax")
# =================== Run model input function  ========================== #
dtmc <- aggregate(rast(dtmcaerth), 10) # Coarse resolution dtm
micro <- modelina(micropointa, vegp, soilc, dtmc, dtmcaerth)
}
\seealso{
[modelin()], [modelina_dy()], [nctoclimarray()]
}
