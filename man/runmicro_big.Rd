% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nonhourly.R
\name{runmicro_big}
\alias{runmicro_big}
\title{runmicro on big areas}
\usage{
runmicro_big(
  weather,
  precip,
  reqhgt,
  vegp,
  soilc,
  dtm,
  pathout,
  hourly = TRUE,
  expand = FALSE,
  tilesize = NA,
  writeasnc = TRUE,
  subsetmodel = TRUE,
  tstep = "month",
  what = "tmax",
  days = NA,
  windhgt = 2,
  soilm = NA,
  runchecks = TRUE,
  xyf = 1,
  pai_a = NA,
  tfact = 1.5,
  surfwet = NA,
  silent = FALSE
)
}
\arguments{
\item{weather}{a data.frame of weather variables (see details)}

\item{precip}{a vector of daily precipitation}

\item{reqhgt}{height for which temperatures are needed (m, negative if below ground surface)}

\item{vegp}{an object of class vegparams as returned by [vegpfromhab()] (see details)}

\item{soilc}{an object of class soilcharac as returned by [soilcfromtype()]}

\item{dtm}{a PackedSpatRaster or SpatRaster object of elevations (see details)}

\item{pathout}{a file directory to which to save data. Default saves to subfolder 'microut' in wording directory.}

\item{hourly}{optional logical indicating whether to run the model in hourly or daily mode (see details).}

\item{expand}{optional logical indicating whether to expand model outputs to hourly if run in daily mode
(ignored if `hourly = TRUE`).}

\item{tilesize}{optional intiger of the number of pixels in x and y of each tile (returned tiles are square).
Calculated automatically based on data size of not provided.}

\item{writeasnc}{optional logical indicating whether to write output data as netCDF4 files (default TRUE)}

\item{subsetmodel}{optional logical indicating whether to subset the model to return e.g. monthly values.
See also [subsetpointmodel()]}

\item{tstep}{one of `year` or `month` or `bioclim`. Used only if `subsetmodel == TRUE` (see [subsetpointmodel()])}

\item{what}{one of `tmax`, `tmin` or `tmedian`. Used only if `subsetmodel == TRUE` (see [subsetpointmodel()])}

\item{days}{optionally a vector of the days in the time sequence to return data for.
Used only if `subsetmodel == TRUE`. If provided `tstep` is ignored. See [subsetpointmodel()]).}

\item{windhgt}{height above ground of wind speed data in weather (m) (see details)}

\item{soilm}{optional vector of soil moisture values in upper 10 cm of the soil (calculated if not supplied)}

\item{runchecks}{optional logical indicating whether to call [checkinputs()] to run checks on format and units of input data.}

\item{xyf}{optional spatial smoothing factor applied in calculation of surface roughness and zero-plane displacement
heights (see details).}

\item{pai_a}{an optional array of plant area index values above `reqhgt` (see details)}

\item{tfact}{coefficient determining sensitivity of soil moisture to variation in topographic wetness (see [soilmdistribute()])}

\item{surfwet}{an optional single numeric value of array of values specifying the proportion
of the canopy surface that should be treated as wet surface (see details)}

\item{silent}{optional logical indicating whether to report on progress (default FALSE - progress reported).}
}
\value{
if `hourly = TRUE` or `expand = TRUE` and `writeasnc = TRUE` the function writes writes a seperate netcdf4 file to disk
for each tile containing georeferenced microclimate data as returned by [runmicro_hr]. If `hourly = FALSE` and `expand = FALSE`
seperate netcdf4 files are written for the hours correspondiing to maximum and minimum temperature within each day. If
`writeasnc = FALSE` objects of class 'microout' or `microoutdaily` are written to file as RDS files for each tile with
an additional wrapped SpatRast of 'dtm' (see [terra::wrap()]) cropped to corresponding tile added to the output to enable subsequent
georeferencing of data. Objects of class 'microout' or `microoutdaily` are both lists.
}
\description{
The function `runmicro_big` tiles larger studies and saves outputs for each tile
}
\details{
The format and and units of `weather` must follow that in the example
dataset `climdata`. As not all wind measurements are at reference height, the height of the wind speed measurement
must be specified if not 2 m. To enable calculation of below-canopy wind and temperature profiles
in tall canopy, the wind speed and temperature data are  adjusted to give values for a height at
the maximum vegetation height if the tallest vegetation exceeds two metres.
For doing so a stand vegetation surface typical of that in which a weather station would be located is assumed.
The parameter `maxiter` sets the maximum number of times the model is iterated to achieve
convergence. Increasing this value improves accuracy at the expense of computation time.
The array of Plant Area index values and clumping factors in `vegp` must
have the same x and y dims as `dtm` but can contain any number of repeated
measures up to the number of entries in `weather`. Data are interpolated to the
time increment of `weather`. Other vegetation paramaters are assumed time-invarient.
The SpatRaster datasets in `soilc` must have
the same x and y dims as `dtm`. The x,y and z units of `dtm` must be all be in
metres and the coordinate reference system must be defined. In subsequent
downscaling of wind, the drag effects of vegetation, determined by vegetation height
and foliage area are accounted for can calculated at this stage. In so doing, it is
necessary to accommodate the possibility that the wind speed is not just affected
by the surface roughness in each pixel,  but also by vegetation surrounding the
location. This is accommodated for by applying `xyf` which effectively smooths
the surface roughness coefficients using `terra::aggregate` where `xyf` is the
aggregation factor. If `xyf` is set to `NA`, the roughness coefficients are averaged
across the study area.  `pai_a` is used to calculate the radiation intercepted by leaves at `reqhgt` if
below canopy. If not supplied it is calculated from total plant area index by
assuming a realistic shape to the vertical profile foliage within the canopy. If supplied, `pai_a` must have the
same dimensions as micro$pai. I.e. with the same x and y dims as the the
supplied dtm and values for each hour as the z dimension. The parameter `surfwet`
determines how much of the canopy should be treated as wet surface when calculating
latent heat fluxes. However, except when extremely droughted, the matric potential of leaves
is such that `surfwet` ~ 1. If set to NA, surface wetness is modelled.
}
\seealso{
[runmicro_biga()] for running the microclimate model over large areas
as tiles with climate input data provided as arrays.
}
